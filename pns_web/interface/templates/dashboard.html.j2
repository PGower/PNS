{% extends 'index.html.j2' %}

{% block head %}
<script src="{{static('js/typeahead.js')}}"></script>
<script src="{{static('js/handlebars.js')}}"></script>
<script src="{{static('js/moment.js')}}"></script>
{% endblock %}

{% block main %}
<form>
	<div class="form-group">
		<input class="form-control" id="name_search" type="text" placeholder="User Name Search"></input>
	</div>
</form>

<div id="table_target">
	
</div>




{% endblock %}

{% block scripts %}
{% raw %}
<script id="records_table_template" type="text/x-handlebars-template">
<div class="panel panel-primary">
	<div class="panel-heading">
		<h3 class="panel-title">Current Info</h3>
	</div>
	<div class="panel-body">
		<p>Computer Name: {{current.computer_name}}</p>
		<p>IP Address: {{current.ip_address}}</p>
		<p>Action: {{current.action}}</p>
		<p>Age: {{#fromNow}}{{current.created}}{{/fromNow}}</p>
	</div>
</div>

<div class="panel panel-default">
	<div class="panel-heading">
		<h3 class="panel-title">Historical Info</h3>
	</div>
	<div class="panel-body">
		<p>Historical information for this user. The IP addresses listed are most likely out of date!!.</p>
	</div>
	<table class="table table-striped table-hover">
		<thead>
			<tr>
				<th>IP Address</th>
				<th>Computer Name</th>
				<th>Action</th>
				<th>Age</th>
				<th>Expired</th>
			</tr>
		</thead>
		<tbody>
			{{#each history}}
				<tr>
					<td>
						<a href="tvnc://{{this.ip_address}}">{{this.ip_address}}</a>
					</td>
					<td>{{this.computer_name}}</td>
					<td>{{this.action}}</td>
					<td>{{#fromNow}}{{this.created}}{{/fromNow}}</td>
					<td>{{this.expired}}</td>
				</tr>
			{{else}}
				<tr colspan='5'>
					<td>There is no history data for this user.</td>
				</tr>
			{{/each}}
		</tbody>
	</table>
<div>
</script>
{% endraw %}

<script>
Handlebars.registerHelper('fromNow', function(context, options) {
	console.log(context);
	if (window.moment) {
		return moment(context).fromNow();
	} else {
		return context;
	}
})

var autocomplete_engine = new Bloodhound({
	remote: {
		url: '/api/v1/search?q=@',
		wildcard: '@'
	},
	queryTokenizer: Bloodhound.tokenizers.whitespace,
  	datumTokenizer: Bloodhound.tokenizers.whitespace,
  	identify: function(obj) {return obj['username']},
})
$('#name_search').typeahead({
	minLength: 2,
},
{
	name: 'RemoteUsernames',
	source: autocomplete_engine
})

var records_table_builder = function(data, textStatus, jqXHR) {
	var template_source = $('#records_table_template').html();
	var template = Handlebars.compile(template_source);
	$('#table_target').html(template(data));
}

$('#name_search').bind('typeahead:select', function(ev, suggestion) {
	$.get("{{url('user_info')}}", {term: suggestion.username}, records_table_builder, 'json');
})
</script>
{% endblock %}